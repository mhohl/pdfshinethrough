# !/bin/bash -
#
# simulates printed stuff shining though the paper
# to check for register accuracy
#

error()
{
    echo "$@" 1>&2
    usage_and_exit 1
}

usage()
{
    cat <<EOF

$PROGRAM â€“ Version ${VERSION} 2019 Marc Hohl (marc@hohlart.de)

Simulates printed stuff shining though the paper to check for register
accuracy.

Predefined constants modifying the appearance of the content from the backside
of the page:
resolution: ${RES} (in dpi)
brightness: ${BRI} (in percent)
saturation: ${SAT} (in percent)
diffusion: ${DIF} (positive integers)

Usage:
$PROGRAM [--resolution ...] [--brightness ...] [--saturation ...]
         [--diffusion ...][--help] [--version] infile [outfile]

EOF
}

usage_and_exit()
{
    usage
    exit $1
}

version()
{
    echo "$PROGRAM version $VERSION"
}

# are pdftk and convert available?
command -v pdftk >/dev/null 2>&1 || {
    error "pdftk not installed. Aborting."
}
command -v convert >/dev/null 2>&1 || {
    error "ImageMagick not installed. Aborting."
}

# set defaults
PROGRAM=`basename $0`
VERSION=1.0
RES=150
BRI=140
SAT=70
DIF=3
TMPDIR=$( mktemp -d ) || exit 1

while test $# -gt 0
do
    case $1 in
        --version | --versio | --versi | --vers | --ver | --ve | --v | \
        -version | -versio | -versi | -vers | ver | -ve | -v )
            version
            exit 0
            ;;
        --help | --hel | --he | --h | -help | -hel | -he | -h )
            usage_and_exit 0
            ;;
        --brightness | --brightnes | --brightne | --brightn | --bright | \
        --brigh | --brig | --bri | --br | --b | \
        -brightness | -brightnes | -brightne | -brightn | -bright | \
        -brigh | -brig | -bri | -br | -b )
            shift
            BRI=$1
            ;;
        --diffusion | --diffusio | --diffusi | --diffus | \
        --diffu | --diff | --dif | --di | --d | \
        -diffusion | -diffusio | -diffusi | -diffus | \
        -diffu | -diff | -dif | -di | -d )
            shift
            DIF=$1
            ;;
        --resolution | --resolutio | --resoluti | --resolut | --resolu | \
        --resol | --reso | --res | --re | --r | \
        -resolution | -resolutio | -resoluti | -resolut | -resolu | \
        -resol | -reso | -res | -re | -r )
            shift
            RES=$1
            ;;
        --saturation | --saturatio | --saturati | --saturat | --satura | \
        --satur | --satu | --sat | --sa | --s | \
        -saturation | -saturatio | -saturati | -saturat | -satura | \
        -satur | -satu | -sat | -sa | -s )
            shift
            SAT=$1
            ;;
        -*)
            error "Unrecognized option: $1"
            ;;
        *)
            break
            ;;
    esac
    shift
done

SOURCE="$1"
test $# -gt 0 && shift
DEST="$1"

if [ -z "$DEST" ]; then
    DEST=${SOURCE/.pdf/_shinethrough.pdf}
fi

# split document into single pages
pdftk $SOURCE burst output $TMPDIR/page_%04d.pdf

# count number of pages
pagenum=$( ls $TMPDIR/page_*.pdf | wc -l )

# start a separate process for each page
for f in $TMPDIR/page_*.pdf; do
    convert -density ${RES} $f \
        -blur 0x${DIF} \
        -flop \
        -modulate ${BRI},${SAT} \
        -flatten \
        ${f/page_/blur_} &
done

wait

# add background to each page
for n in $(seq 1 $pagenum); do
    # n % 2 is 1 for n odd and 0 for n even
    # odd pages -> use next page as background (n+1)
    # even pages -> use previous page (n-1)
    # ( n % 2 ) * 2 - 1 yields +1/-1, we add n
    b=$(( ($n % 2) * 2 - 1 + $n ))
    printf -v page -- 'page_%04d.pdf' "$n"
    printf -v blur -- 'blur_%04d.pdf' "$b"
    # check whether backgrund is available, otherwise just copy
    if [ -e "$TMPDIR/$blur" ]; then
        pdftk $TMPDIR/$page background $TMPDIR/$blur output $TMPDIR/${page/page_/out_}
    else
        cp $TMPDIR/$page $TMPDIR/${page/page_/out_}
    fi
done

# concat all pages
pdftk $TMPDIR/out_*.pdf cat output $DEST

# cleanup
rm -rf $TMPDIR